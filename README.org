* mesa-test
This script submits a set of jobs that run the [[http://mesa.sourceforge.net/][MESA]] test_suite on a
cluster.  It is written for the [[https://slurm.schedmd.com/documentation.html][SLURM]] job scheduler.  Nifty features
include managing the dependencies between the jobs, running the star
test_suite in parallel, and sending an email with the results.

These scripts load the [[http://www.astro.wisc.edu/~townsend/static.php?ref=mesasdk][MESA SDK]] via [[http://modules.sourceforge.net/][modules]].  (You could also modify
them to directly set the environment variables yourself.)  The module
file I use is

#+begin_example
  #%Module1.0
  proc ModulesHelp { } {
         Puts Stderr "This module adds MESA SDK 20190830 to various paths"
  }

  module-whatis "Sets up MESA SDK 20190830 in your environment"

  set HOME $env(HOME)
  set MESASDK_ROOT $HOME/modules/mesasdk-20190830
  setenv MESASDK_ROOT $MESASDK_ROOT
  prepend-path PATH               $MESASDK_ROOT/bin/
  prepend-path MANPATH            $MESASDK_ROOT/share/man/
  setenv PGPLOT_DIR $MESASDK_ROOT/lib/pgplot
#+end_example

** test-mesa.sh
This is the script that you should run.  It needs network access to
fetch the latest MESA version, so on my cluster, that means it needs
to run on a login node.  It exits after checking out a new copy of
MESA and spawning the other jobs.
#+BEGIN_EXAMPLE
./test-mesa.sh [git OR svn]
#+END_EXAMPLE
The first argument picks whether to run from the svn using [[https://github.com/MESAHub/mesa_test][mesa_test]]
or from git using the ~each_test_run~ script included in MESA.

You should edit this script to customize various values for your
system. Look for comments beginning ~# set~.

** install.sh
This installs MESA.
** star.sh
This runs the star test_suite. It uses SLURM job arrays to run a separate job for
each test case.
** binary.sh
This runs the binary test_suite.  It uses SLURM job arrays to run a separate job for
each test case.
** cleanup.sh
This cleans up and will send an email with the results to
~MY_EMAIL_ADDRESS~.  (Set this variable in ~test_mesa.sh~ or edit the script.)
** git-hook.sh
This is an example post-receive hook that can start the tests when a
git repo is pushed to.
